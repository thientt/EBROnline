@model EBROnline.ViewModel.ListSubViewModel

@{
    AjaxOptions ajaxOption = new AjaxOptions
    {
        Url = Url.Action("Add", "SubDashboard", routeValues: new { id = Model.DashboardId }),
        HttpMethod = "POST",
        OnBegin = "onInsertSubBegin",
        OnComplete = "onInsertSubComplete",
        OnSuccess = "onInsertSubSuccess",
        OnFailure = "onInsertSubFailure",
    };
}

@using (Ajax.BeginForm(ajaxOption))
{
    @Html.HiddenFor(x => x.DashboardId)
    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-4">Stack Die ID</label>
            <div class="col-md-8">
                @Html.EBRTextBoxFor(x => Model.StackDieId, htmlAttributes: new { @class = "form-control", @id = "txtAddStackDieId", @type = "text", @autofocus = true })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4">Stack Die PMPN</label>
            <div class="col-md-8">
                @Html.EBRTextBoxFor(x => Model.StackDiePMPN, htmlAttributes: new { @class = "form-control", @id = "txtAddStackDiePMPN", @type = "text" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4">Stack Die Qty</label>
            <div class="col-md-8">
                <input type="number" name="StackDieQty" class="form-control" id="txtAddStackDieQty" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4">Stack Die Wafer Numbers</label>
            <div class="col-md-8">
                @Html.EBRTextBoxFor(x => Model.StackDieWaferNumbers, htmlAttributes: new { @class = "form-control", @id = "txtAddStackDieWaferNumbers", @type = "text" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4">MES Lot Number</label>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.LotNumber, htmlAttributes: new { @class = "form-control", @id = "txtAddLotNumber" })
                @Html.ValidationMessageFor(x => x.LotNumber)

            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4">SAP Batch Lot Number</label>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.BatchLotNumber, htmlAttributes: new { @class = "form-control", @id = "txtAddBatchLotNumber" })
                @Html.ValidationMessageFor(x => x.BatchLotNumber)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4">Wafer Qty</label>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.WaferQty, htmlAttributes: new { @class = "form-control", @id = "txtAddWaferQty" })
                @Html.ValidationMessageFor(x => x.WaferQty)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4">Build Quality</label>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.BuildQuality, htmlAttributes: new { @class = "form-control", @id = "txtAddBuildQuality" })
                @Html.ValidationMessageFor(x => x.BuildQuality)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-4">Comment/Wafer's</label>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.Comment, htmlAttributes: new { @class = "form-control", @id = "txtAddComment" })
                @Html.ValidationMessageFor(x => x.Comment)
            </div>
        </div>
        <div class="form-group ">
            <div class="col-md-offset-4 col-md-8">
                <input class="btn btn-primary btn-width-md" type="submit" id="btnSaveSub" value="Add" />
                <button class="btn btn-default btn-width-md" type="button" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
}
